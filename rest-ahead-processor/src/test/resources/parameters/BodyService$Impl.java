package com.lablizards.restahead.demo;

import com.lablizards.restahead.adapter.DefaultAdapters;
import com.lablizards.restahead.client.RestClient;
import com.lablizards.restahead.client.requests.PostRequest;
import com.lablizards.restahead.conversion.Converter;
import com.lablizards.restahead.exceptions.RestException;
import java.io.IOException;
import java.lang.InterruptedException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Map;
import java.util.concurrent.ExecutionException;
import javax.annotation.processing.Generated;

@Generated("Generated by RestAhead")
public final class BodyService$Impl implements BodyService {
    private final RestClient client;

    private final Converter converter;

    private final DefaultAdapters defaultAdapters;

    public BodyService$Impl(RestClient client, Converter converter,
                            DefaultAdapters defaultAdapters) {
        this.client = client;
        this.converter = converter;
        this.defaultAdapters = defaultAdapters;
    }

    @Override
    public final void post(Map<String, Object> body) {
        var httpRequest = new PostRequest("/post");
        try {
            httpRequest.setBody(converter.serialize(body));
        } catch (IOException exception) {
            throw RestException.getAppropriateException(exception);
        }
        var response = client.execute(httpRequest);
        try {
            defaultAdapters.syncVoidAdapter(response);
        } catch (ExecutionException | InterruptedException exception) {
            throw RestException.getAppropriateException(exception);
        }
    }
}