package com.lablizards.restahead.demo;

import com.lablizards.restahead.client.RestClient;
import com.lablizards.restahead.client.requests.DeleteRequest;
import com.lablizards.restahead.conversion.Converter;
import com.lablizards.restahead.conversion.GenericReference;
import com.lablizards.restahead.exceptions.RestException;
import java.io.IOException;
import java.lang.InterruptedException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.util.Map;
import javax.annotation.processing.Generated;

@Generated("Generated by RestAhead")
public final class ServiceWithGenericResponse$Impl implements ServiceWithGenericResponse {
    private final RestClient client;

    private final Converter converter;

    public ServiceWithGenericResponse$Impl(RestClient client, Converter converter) {
        this.client = client;
        this.converter = converter;
    }

    @Override
    public final Map<String, Object> delete() {
        var httpRequest = new DeleteRequest("/delete");
        try {
            var response = client.execute(httpRequest);
            var responseTypeReference = new GenericReference<Map<String, Object>>(){};
            return converter.deserialize(response, responseTypeReference.getType());
        } catch (IOException | InterruptedException exception) {
            throw new RestException(exception);
        }
    }
}